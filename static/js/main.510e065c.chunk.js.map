{"version":3,"sources":["components/Tem/Tem.tsx","services/getTem.tsx","components/Titulo.js","components/Menu/MenuComponent.tsx","components/TemContainer/Imagenes.js","components/Menu/Sidebar.tsx","components/Menu/Backdrop.tsx","components/TemContainer/TemContainer.tsx","components/Tabs/Stats.tsx","components/Modal/Modal.tsx","Root.js","App.tsx","index.tsx"],"names":["Tem","props","state","baseUrl","tiposDeMap","iconoTipo","temTipyImg","handleLoad","Function","this","setState","data","colores","name","console","log","className","filtrando","map","tem","key","to","pathname","modal","propiedades","buscarTipos","types","number","tipos","llave","height","alturaLoad","offset","src","icon","alt","newimagen","length","Ubicacion","wikiPortraitUrlLarge","React","Component","getTems","a","fetch","response","json","responseJson","getTemsTyipos","Titulo","children","ProptTypes","string","MenuComponent","onClick","botonMenu","Tems","Sidebar","activo","show","href","Backdrop","click","TemContainer","prevState","sideBarOpen","backdropPresionado","isFetch","losTiposNuevos","conDesconocido","filtrarPorTipo","sacandoTipos","location","registerSW","navigator","serviceWorker","register","window","addEventListener","todosLosTem","i","todosLosTipos","Unknown","push","reduce","arregloTipos","img","JSON","stringify","unSoloTem","estoEsTipo","j","forEach","element1","evolution","evolves","evolutionTree","element","imagenEvolution","stats","element2","k","element3","search","elTipo","filtrado","filter","some","filtrar","bind","Object","keys","Stats","total","letra","toString","slice","atk","def","hp","spatk","spd","spdef","sta","style","width","agregarPunto","TemModal","datos","buscandoColores","gameDescription","details","inches","cm","weight","lbs","kg","catchRate","genderRatio","female","male","Root","useLocation","background","exact","path","component","Modal","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.510e065c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './tem.css'\r\nimport '../colores.css'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\ninterface Props {\r\n    data: any\r\n}\r\n\r\ninterface State {\r\n    baseUrl: any,\r\n    tiposDeMap: any,\r\n    iconoTipo: any,\r\n    temTipyImg: any,\r\n    handleLoad: Function\r\n}\r\n\r\nclass Tem extends React.Component<Props, State> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        \r\n        this.state={\r\n            baseUrl: '',\r\n            tiposDeMap: {},\r\n            iconoTipo: {},\r\n            temTipyImg: [],\r\n            handleLoad: Function,\r\n        }\r\n        \r\n    }\r\n   \r\n\r\n    componentDidMount(){\r\n        const baseUrl = 'https://temtem-api.mael.tech'\r\n        this.setState({\r\n            baseUrl,\r\n        })\r\n    }\r\n\r\n    buscarTipos(data: any){\r\n        let colores = \"\"\r\n        for (const tipos of data) {\r\n            colores = colores + tipos.name\r\n        }\r\n        return colores\r\n    }\r\n\r\n    render(){\r\n        const {data} = this.props\r\n        const { baseUrl } = this.state\r\n        console.log(\"me ejecuto\")\r\n        return(\r\n            <div className=\"tem-container\">\r\n                {\r\n                  data.filtrando.map((tem: any, key: any) => {\r\n                      return (\r\n                    <Link to={{\r\n                        pathname: `/${tem.name}`,\r\n                        state: {modal:true,\r\n                            propiedades: tem,\r\n\r\n                        },\r\n                         }}  key={key} >\r\n                       \r\n                    <div className={`${this.buscarTipos(tem.types)} tem-normal` }>\r\n                            <div className=\"titulo\">\r\n                                <h2>{tem.name}</h2>\r\n                                <div className=\"tem-number\">\r\n                                    <span>\r\n                                        {`#${tem.number}`}\r\n                                    </span>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"tem-normal-info\">\r\n                                <div className=\"tipos\">\r\n                                    {tem.types.map((tipos: any, llave: any)=>{\r\n                                        return(\r\n                                            <div key={llave} >\r\n                                                <p>{tipos.name}</p>\r\n                                                <LazyLoad height={data.alturaLoad} offset={data.offset}>\r\n                                                {\r\n                                                    tipos.name === 'Unknown' \r\n                                                    ? <img src={`${tipos.icon}`} className=\"tipo-icono\" alt=\"\"/> \r\n                                                    :<img src={`${baseUrl}${tipos.icon} `} className=\"tipo-icono\" alt=\"\"/>\r\n                                                }\r\n                                                </LazyLoad>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                <div>\r\n                                    <LazyLoad height={data.alturaLoad} offset={data.offset}>\r\n                                    {\r\n                                        tem.newimagen.length > 0\r\n                                        ? <img src={tem.newimagen[0].Ubicacion} className=\"tem-imagen\" alt=\"\"/>\r\n                                        :<img src={tem.wikiPortraitUrlLarge} className=\"tem-imagen\" alt=\"\"/>\r\n                                    }\r\n                                    </LazyLoad>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </Link>\r\n                    \r\n                  )})\r\n                }   \r\n                \r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\n\r\n                \r\n                \r\n                \r\n\r\nexport default Tem","const baseUrl = 'https://temtem-api.mael.tech/api/temtems'\r\nexport async function getTems () {\r\n    try {\r\n        const response = await fetch(`${baseUrl}`)\r\n        const responseJson = await response.json()\r\n        return responseJson\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    \r\n}\r\n\r\nexport async function getTemsTyipos (){\r\n    try {\r\n        const response = await fetch('https://temtem-api.mael.tech/api/types')\r\n        const responseJson = await response.json()\r\n        return responseJson\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    \r\n}\r\n\r\nexport default {\r\n    getTems,\r\n    getTemsTyipos\r\n}","import React from 'react'\r\nimport ProptTypes from 'prop-types'\r\n\r\nconst Titulo = ({children}) => <h1>{children}</h1>\r\n\r\nTitulo.ProptTypes = {\r\n    children: ProptTypes.string\r\n}\r\n\r\nexport default Titulo","import React from 'react'\r\nimport './Menu.scss'\r\n\r\ninterface Props {\r\n    botonMenu: any\r\n}\r\n\r\nclass MenuComponent extends React.Component<Props> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state={\r\n            \r\n        }\r\n    }\r\n\r\n  render () {\r\n    return (\r\n        <button className=\"boton-toggle\" onClick={this.props.botonMenu}>\r\n            <div className=\"boton-toggle-lineas\"></div>\r\n            <div className=\"boton-toggle-lineas\"></div>\r\n            <div className=\"boton-toggle-lineas\"></div>\r\n        </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuComponent","export const Tems  = [\r\n    {Ubicacion:\"./tem/Oree.png\",name:\"Oree\"},\r\n    {Ubicacion:\"./tem/Zaobian.png\",name:\"Zaobian\"},\r\n    {Ubicacion:\"./tem/Platypet.png\",name:\"Platypet\"},\r\n    {Ubicacion:\"./tem/Platox.png\",name:\"Platox\"}\r\n  ]\r\n  \r\n  export const nuevosIconos  = [\r\n    {\r\n        \"Neutral\": {\r\n            \"name\": \"Neutral\",\r\n            \"icon\": \"./iconos/Neutral.png\"\r\n        },\r\n        \"Fire\": {\r\n            \"name\": \"Fire\",\r\n            \"icon\": \"./iconos/Fire.png\"\r\n        },\r\n        \"Water\": {\r\n            \"name\": \"Water\",\r\n            \"icon\": \"./iconos/Water.png\"\r\n        },\r\n        \"Nature\": {\r\n            \"name\": \"Nature\",\r\n            \"icon\": \"./iconos/Nature.png\"\r\n        },\r\n        \"Electric\": {\r\n            \"name\": \"Electric\",\r\n            \"icon\": \"./iconos/Electric.png\"\r\n        },\r\n        \"Earth\": {\r\n            \"name\": \"Earth\",\r\n            \"icon\": \"./iconos/Earth.png\"\r\n        },\r\n        \"Mental\": {\r\n            \"name\": \"Mental\",\r\n            \"icon\": \"./iconos/Mental.png\"\r\n        },\r\n        \"Wind\": {\r\n            \"name\": \"Wind\",\r\n            \"icon\": \"./iconos/Wind.png\"\r\n        },\r\n        \"Digital\": {\r\n            \"name\": \"Digital\",\r\n            \"icon\": \"./iconos/Digital.png\"\r\n        },\r\n        \"Melee\": {\r\n            \"name\": \"Melee\",\r\n            \"icon\": \"./iconos/Melee.png\"\r\n        },\r\n        \"Crystal\": {\r\n            \"name\": \"Crystal\",\r\n            \"icon\": \"./iconos/Crystal.png\"\r\n        },\r\n        \"Toxic\": {\r\n            \"name\": \"Toxic\",\r\n            \"icon\": \"./iconos/Toxic.png\"\r\n        },\r\n        \"Unknown\": {\r\n            \"name\": \"Unknown\",\r\n            \"icon\": \"./iconos/Unknown.png\"\r\n        }\r\n    }\r\n  ]\r\n\r\n  export default {\r\n      Tems,\r\n      nuevosIconos\r\n  }\r\n\r\n","import React from 'react'\r\nimport './Menu.scss'\r\nimport LazyLoad from 'react-lazyload'\r\nconst Sidebar = (props: any) =>{\r\n    let activo = 'sidebar'\r\n    if(props.show){\r\n        activo = 'sidebar activo'\r\n    }\r\n    return(\r\n        <nav className={activo} >\r\n            <div className=\"side-header\">\r\n            <LazyLoad height={50} offset={50}>\r\n                <img src=\"./images/pvp.jpg\" alt=\"\"/>\r\n            </LazyLoad>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"/\">Prueba 1</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/\">Prueba 1</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n    \r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\nimport './Menu.scss'\r\n\r\nconst Backdrop = (props: any) =>{\r\n    return(\r\n       <div className=\"backdrop\" onClick={props.click}></div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Backdrop\r\n\r\n","import React from 'react'\r\nimport Tem from '../Tem/Tem'\r\nimport { getTems, getTemsTyipos } from '../../services/getTem'\r\nimport Titulo from '../Titulo'\r\nimport  './temcontainer.css'\r\nimport '../colores.css'\r\nimport MenuComponent from '../Menu/MenuComponent'\r\nimport {Tems } from './Imagenes'\r\nimport Sidebar from '../Menu/Sidebar'\r\nimport Backdrop from '../Menu/Backdrop'\r\nimport LazyLoad from 'react-lazyload';\r\n// import { Switch, Route } from 'react-router-dom';\r\n// import ModalTem from './ModalTem'\r\n// import Search from './Search'\r\n\r\ninterface Props {\r\n    data: any\r\n    pageWrapId: any\r\n    botonMenu: any\r\n}\r\n\r\ninterface State {\r\n    temTipyImg: any,\r\n    isFetch: Boolean,\r\n    losTiposNuevos: any,\r\n    conDesconocido: any\r\n    filtrarPorTipo: any\r\n    sacandoTipos: any\r\n    location: any\r\n    filtrando: any\r\n    baseUrl: any\r\n    sideBarOpen: any\r\n    alturaLoad: any\r\n    offset: any\r\n\r\n}\r\nclass TemContainer extends React.Component<Props, State> {\r\n    constructor (props: any) {\r\n        super(props)\r\n        this.state = {\r\n            temTipyImg: [],\r\n            isFetch: true,\r\n            losTiposNuevos: [],\r\n            conDesconocido: [],\r\n            filtrarPorTipo: [],\r\n            sacandoTipos: [],\r\n            location: [],\r\n            filtrando: [],\r\n            baseUrl: '',\r\n            sideBarOpen: false,\r\n            alturaLoad: '50',\r\n            offset: '50'\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        window.addEventListener('load', () =>{\r\n            registerSW();\r\n        })\r\n        \r\n        async function registerSW(){\r\n          if('serviceWorker' in navigator) {\r\n            try { \r\n              await navigator.serviceWorker.register('./sw.js')\r\n            } catch(e){\r\n              console.log(\"SW registration failed\")\r\n            }\r\n          }\r\n        }\r\n        \r\n        \r\n        const baseUrl = 'https://temtem-api.mael.tech'\r\n\r\n        try {\r\n        let {losTiposNuevos, temTipyImg} = this.state\r\n        const todosLosTem = await getTems()\r\n        const todosLosTipos = await getTemsTyipos()\r\n        let Unknown =  {name: 'Unknown', icon: './iconos/unknown.png'}\r\n        todosLosTipos.push(Unknown)\r\n            \r\n            losTiposNuevos = todosLosTipos.reduce(function(arregloTipos: any, img: any ) {\r\n                let key = img.name\r\n                let esxisteTipo = key in arregloTipos\r\n                if(!esxisteTipo){\r\n                    arregloTipos[key] = img\r\n                }\r\n                return {...arregloTipos}\r\n            }, {})\r\n            \r\n            console.log(\"Estos son los tipos nuevos\", JSON.stringify(losTiposNuevos) )\r\n            this.setState({\r\n               losTiposNuevos\r\n               \r\n            })\r\n\r\n            temTipyImg = todosLosTem.map(function(unSoloTem: any) {\r\n                let types = unSoloTem.types.map(function(estoEsTipo: any, llave: any){\r\n                  return  losTiposNuevos[estoEsTipo]\r\n                })\r\n                \r\n                return {...unSoloTem, types }\r\n            })\r\n            for (const i in temTipyImg) {\r\n                temTipyImg[i].newimagen=[]/** se le agrego el nuevo atributno new imagen\r\n                Se hizo array para que se le agreguen varias imagenes* */\r\n            }\r\n        \r\n             for (const i in temTipyImg) {/**en cada elemento se busca que el nombre sea igual al nombre de json de imagenes,si es igual se inserta la nueva ruta */\r\n                for (const j in Tems) {\r\n                    if (temTipyImg[i].name===Tems[j].name) {/**aqui recore el array Tems para compararlo con el nombre del array principal */\r\n                        temTipyImg[i].newimagen.push(Tems[j])/**se le hace un push al atributo imagen* */\r\n                    }\r\n                }\r\n            }\r\n\r\n            temTipyImg.forEach((element1:any,i: any) => {\r\n                if (element1.evolution.evolves!==false) {\r\n                    element1.evolution.evolutionTree.forEach((element: any,j: any) => {\r\n                        temTipyImg[i].evolution.evolutionTree[j].imagenEvolution={}/**Se agrega el nuevo campo imagenEvolution y stats al array de evoluciones* */\r\n                        temTipyImg[i].evolution.evolutionTree[j].stats={}\r\n                    });\r\n                }\r\n               \r\n            });\r\n\r\n            temTipyImg.forEach((element1:any,i: any) => {\r\n                if (element1.evolution.evolves!==false) {/*se valida que el pokemon tenga evoluciones** */\r\n                    element1.evolution.evolutionTree.forEach((element2: any,k: any) => {/** si tiene evoluciones se hace un array a sus evoluciones */\r\n                        temTipyImg.forEach((element3: any) => {/**Se recorre el array original* */\r\n                            if (element3.name===element2.name) {/** se valida que el nombre de la evolucion sea igual al nombre del pokemon del array original* */\r\n                                if (element3.newimagen.length===0) {/***se valida que el campo new imagen tenga informacion */\r\n                                    temTipyImg[i].evolution.evolutionTree[k].stats=element3.stats\r\n                                    temTipyImg[i].evolution.evolutionTree[k].imagenEvolution=element3.icon/**si tiene informacion se inserta la nueva imagen** */\r\n                                }else {/**si no tiene informacion se inserta la imagen vieja* */\r\n                                    temTipyImg[i].evolution.evolutionTree[k].stats=element3.stats\r\n                                    temTipyImg[i].evolution.evolutionTree[k].imagenEvolution=element3.newimagen\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n               \r\n            });\r\n        \r\n            this.setState({\r\n               temTipyImg,\r\n               filtrando: temTipyImg\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(\"es el error de todos los tem\",error)\r\n        }\r\n        \r\n        this.setState({\r\n            isFetch: !this.state.isFetch,\r\n            baseUrl\r\n            \r\n        })\r\n         \r\n     }\r\n    componentDidUpdate(){\r\n    }\r\n    handleSearch(search: any){\r\n\r\n    }\r\n    filtrar(elTipo:any){\r\n        let {temTipyImg} = this.state\r\n        let filtrando = temTipyImg\r\n        // let tipo1 = elTipo\r\n\r\n        if(elTipo ===\"borrar\"){\r\n            this.setState({\r\n                filtrando\r\n            })  \r\n        }\r\n        else{\r\n\r\n            let filtrado =  filtrando.filter((tem: any) =>\r\n            tem.types.some((tipos: any) =>  tipos.name === elTipo))\r\n            .map((tem: any) => {\r\n                let nuevosTem = {...tem}\r\n                return nuevosTem\r\n            })\r\n            this.setState({\r\n                filtrando: filtrado\r\n            })\r\n        \r\n        }\r\n        \r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    botonMenu =() =>{\r\n        this.setState((prevState) =>{\r\n            return { sideBarOpen: !prevState.sideBarOpen}\r\n        })\r\n    }\r\n    backdropPresionado =() =>{\r\n        this.setState({\r\n            sideBarOpen: false\r\n        })\r\n    }\r\n    render ()  {\r\n\r\n        const { isFetch, filtrando, losTiposNuevos, baseUrl, sideBarOpen, alturaLoad, offset } = this.state\r\n        this.filtrar = this.filtrar.bind(this)\r\n        const propiedades ={\r\n            filtrando,\r\n            alturaLoad,\r\n            offset\r\n        }\r\n        console.log(filtrando)\r\n        return(\r\n            <>\r\n            \r\n            <div className=\"header\">\r\n            <MenuComponent  botonMenu={this.botonMenu}/>\r\n            <Sidebar show={this.state.sideBarOpen}/> \r\n      \r\n            {\r\n                sideBarOpen && <Backdrop click={this.backdropPresionado}/>\r\n            }\r\n       \r\n                <span>Tem Tem Plus</span>\r\n                \r\n            </div>\r\n            <div>\r\n                <div className=\"tipos-container\">\r\n                    {\r\n                        Object.keys(losTiposNuevos).map((key:any) =>{\r\n                            return(\r\n                                <button className={`${losTiposNuevos[key].name} boton-filtro`}  onClick={() => this.filtrar(key)}>\r\n                                        <div>\r\n                                        {/* <p>{losTiposNuevos[key].name}</p> */}\r\n                                        <LazyLoad height={alturaLoad} offset={offset}>\r\n                                        {\r\n                                            losTiposNuevos[key].name === 'Unknown' \r\n                                            ? <img src={`${losTiposNuevos[key].icon}`} className=\"tipo-icono\" alt=\"\"/>\r\n                                            : <img src={`${baseUrl}${losTiposNuevos[key].icon}`} className=\"tipo-icono\" alt=\"\"/>\r\n                                        }\r\n                                        </LazyLoad>\r\n                                        </div>\r\n                                </button>\r\n                            )\r\n                        })\r\n                    }\r\n                    <button className={`boton-filtro`}  onClick={() => this.filtrar(\"borrar\")}>\r\n                                        <div>\r\n                                        {/* <p>All Tem</p> */}\r\n                                  \r\n                                        <img src={`./iconos/all.png`} className=\"tipo-icono\" alt=\"\"/>\r\n            \r\n                                        </div>\r\n                                </button>\r\n      \r\n                </div>\r\n            {/* <button onClick={() => this.filtrar(\"Digital\")}>Digital</button>\r\n            <button onClick={() => this.filtrar(\"Water\")}>Water</button>\r\n            <button onClick={() => this.filtrar(\"Fire\")}>Fire</button>\r\n            <button onClick={() => this.filtrar(\"borrar\")}>Todos</button>\r\n            <button onClick={() => this.filtrar(\"Toxic\")}>Toxic</button> */}\r\n            </div>\r\n            <Titulo>Tems</Titulo>\r\n            {/* <Search handleSearch={this.handleSearch}/> */}\r\n            {\r\n                isFetch && <div>cargando</div>\r\n            }\r\n\r\n            <Tem data={propiedades}  />\r\n            </>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default TemContainer","import React from 'react'\r\ninterface Props {\r\n    Stats: any\r\n}\r\n\r\ninterface State {\r\n  //empty in our case\r\n}\r\n\r\nclass Stats extends React.Component<Props, State> {\r\n  constructor(props: any){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }  \r\n\r\n  agregarPunto(total: any){\r\n      let letra = total.toString()\r\n   let final = letra.slice(0, -1) + '.' + letra.slice(-1)\r\n   return final\r\n  }\r\n  render() {\r\n      const {Stats} = this.props\r\n      const atk = Stats.atk\r\n      const def = Stats.def\r\n      const hp = Stats.hp\r\n      const spatk = Stats.spatk\r\n      const spd = Stats.spd\r\n      const spdef = Stats.spdef\r\n      const sta = Stats.sta\r\n      const total = Stats.total\r\n    return(\r\n        <div className=\"list\">\r\n            <div className=\"list-item stats\">\r\n                        <div className=\"list-item-nieto\">Hp</div>\r\n                        <div className=\"list-item-nieto\">\r\n                        {`${hp}`}\r\n                        </div>\r\n                        <div className=\"barra\">\r\n                            <div className={`barra-color${hp <= 50 ? '-red': hp <= 80 ? '-orange': hp <= 100 ? '-green' : '' }`} style={{width: `${hp}%`}}>\r\n\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"list-item stats\">\r\n                        <div className=\"list-item-nieto\">Attack</div>\r\n                        <div className=\"list-item-nieto\">\r\n                        {`${Stats.atk}`}\r\n                        </div>\r\n                        <div className=\"barra\">\r\n                            <div className={`barra-color${atk <= 50 ? '-red': atk <= 80 ? '-orange': atk <= 100 ? '-green' : '' }`} style={{width: `${atk}%`}}>\r\n\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"list-item stats\">\r\n                        <div className=\"list-item-nieto\">Defense</div>\r\n                        <div className=\"list-item-nieto\">\r\n                        {`${def}`}\r\n                        </div>\r\n                        <div className=\"barra\">\r\n                            <div className={`barra-color${def <= 50 ? '-red': def <= 80 ? '-orange': def <= 100 ? '-green' : '' }`} style={{width: `${def}%`}}>\r\n\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                \r\n                <div className=\"list-item stats\">\r\n                        <div className=\"list-item-nieto\">Sp. Atk</div>\r\n                        <div className=\"list-item-nieto\">\r\n                        {`${spatk}`}\r\n                        </div>\r\n                        <div className=\"barra\">\r\n                            <div className={`barra-color${spatk <= 50 ? '-red': spatk <= 80 ? '-orange': spatk <= 100 ? '-green' : '' }`} style={{width: `${spatk}%`}}>\r\n\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"list-item stats\">\r\n                        <div className=\"list-item-nieto\">Sp. Def</div>\r\n                        <div className=\"list-item-nieto\">\r\n                        {`${spdef}`}\r\n                        </div>\r\n                        <div className=\"barra\">\r\n                            <div className={`barra-color${spdef <= 50 ? '-red': spdef <= 80 ? '-orange': spdef <= 100 ? '-green' : '' }`} style={{width: `${spdef}%`}}>\r\n\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"list-item stats\">\r\n                        <div className=\"list-item-nieto\">Speed</div>\r\n                        <div className=\"list-item-nieto\">\r\n                        {`${spd}`}\r\n                        </div>\r\n                        <div className=\"barra\">\r\n                            <div className={`barra-color${spd <= 50 ? '-red': spd <= 80 ? '-orange': spd <= 100 ? '-green' : '' }`} style={{width: `${spd}%`}}>\r\n\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                \r\n                <div className=\"list-item stats\">\r\n                        <div className=\"list-item-nieto\">Stamina</div>\r\n                        <div className=\"list-item-nieto\">\r\n                        {`${sta}`}\r\n                        </div>\r\n                        <div className=\"barra\">\r\n                            <div className={`barra-color${sta <= 50 ? '-red': sta <= 80 ? '-orange': sta <= 100 ? '-green' : '' }`} style={{width: `${sta}%`}}>\r\n\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"list-item stats\">\r\n                        <div className=\"list-item-nieto\">Total</div>\r\n                        <div className=\"list-item-nieto\">\r\n                        {`${total}`}\r\n                        </div>\r\n                        <div className=\"barra\">\r\n                            <div className={`barra-color${total <= 400 ? '-red': total <= 500 ? '-orange': total <= 700 ? '-green' : '' }`} style={{width: `${this.agregarPunto(total)}%`}}>\r\n\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                </div>\r\n    )\r\n  }\r\n}\r\nexport default Stats","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../colores.css'\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\r\nimport 'react-tabs/style/react-tabs.css'\r\nimport './teminfo.scss'\r\nimport Stats from '../Tabs/Stats'\r\nimport './modal.css'\r\ninterface Props {\r\n    match: any\r\n    location: any\r\n    propiedades: any\r\n}\r\n\r\ninterface State {\r\n    modal: any\r\n    datos: any\r\n    \r\n}\r\n\r\nclass TemModal extends React.Component<Props, State>  {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state={\r\n            modal: props.location.state.modal,\r\n            datos: props.location.state.propiedades\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const { match: { params } } = this.props\r\n        // const baseUrl = 'https://temtem-api.mael.tech'\r\n    }\r\n\r\n    buscandoColores(data: any){\r\n        let colores = \"\"\r\n        for (const tipos of data) {\r\n            colores = colores + tipos.name\r\n        }\r\n        return colores\r\n    }\r\n    render(){\r\n\r\n        const {datos, modal} = this.state\r\n        const baseUrl = 'https://temtem-api.mael.tech'\r\n        console.log(\"esto es lo que le paso a info\",datos)\r\n       \r\n        return (\r\n            <>\r\n           <div className={`${this.buscandoColores(datos.types)} tem-info`}>\r\n            <div className=\"close\"> \r\n                {modal && <Link to=\"/\" ><img src=\"./iconos/back.png\" alt=\"\"/></Link>}\r\n            </div>\r\n            <div className=\"nombre\">\r\n                <h1>{datos.name}</h1>\r\n                <div className=\"numero\">\r\n                    <span >{`#${datos.number}`}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"tipos\">\r\n                {datos.types.map((tipos: any, llave: any)=>{\r\n                    return(\r\n                        <div key={llave} >\r\n                            <p>{tipos.name}</p>\r\n                            <img src={`${baseUrl}${tipos.icon}`} className=\"tipo-icono\" alt=\"\"/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"imagen-principal\">\r\n                {\r\n                    datos.newimagen.length > 0\r\n                    ? <img src={datos.newimagen[0].Ubicacion} className=\"tem-imagen\" alt=\"\"/>\r\n                    :<img src={datos.wikiPortraitUrlLarge} className=\"tem-imagen\" alt=\"\"/>\r\n                }\r\n                \r\n            </div>\r\n            </div>\r\n            <div className=\"tem-tabs\">\r\n            <Tabs>\r\n                <TabList>\r\n                    <Tab>About</Tab>\r\n                    <Tab>Base Stats</Tab>\r\n                    <Tab>Evolution</Tab>\r\n                    <Tab>Moves</Tab>\r\n                </TabList>\r\n\r\n                <TabPanel>\r\n                <div className=\"list\">\r\n                        <p className=\"descripcion\">{datos.gameDescription}</p>\r\n                        <div className=\"flotante\">\r\n                            <div className=\"\">\r\n                                <div className=\"titulo\"> Height</div>\r\n                                <div className=\"\">\r\n                                {`${datos.details.height.inches}*`}\r\n                                {` (${datos.details.height.cm})cm`}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"\">\r\n                                <div className=\"titulo\">Weight</div>\r\n                                <div className=\"\">\r\n                                {`${datos.details.weight.lbs}lbs`}\r\n                                {` (${datos.details.weight.kg})kg`}\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                <div className=\"list-item\">\r\n                        <div className=\"list-item-nieto\"> CatchRate</div>\r\n                        <div className=\"list-item-nieto\">\r\n                        {`${datos.catchRate}`}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list-item\">\r\n                        <div className=\"list-item-nieto\">Gender</div>\r\n                        <div className=\"list-item-nieto\">\r\n                            <div >\r\n                                <img src=\"./iconos/woman.png\" alt=\"\"/>\r\n                                {datos.genderRatio.female} \r\n                            </div>\r\n                            <div>\r\n                                <img src=\"./iconos/man.png\" alt=\"\"/>\r\n                                {datos.genderRatio.male}\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                <Stats Stats={datos.stats}  />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                <h2>Any content 1</h2>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                <h2>Any content 2</h2>\r\n                </TabPanel>\r\n            </Tabs>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n  export default TemModal","import React from 'react';\r\nimport { Switch, Route, useLocation } from 'react-router-dom';\r\nimport TemContainer from './components/TemContainer/TemContainer';\r\nimport Modal from './components/Modal/Modal'\r\n\r\n\r\nconst Root = () => {\r\n  let location = useLocation();\r\n  let background = location.state && location.state.background;\r\n  return(\r\n    <Switch location={background || location}>\r\n      <Route exact path=\"/SuperTem/:temName\" component={Modal} />\r\n      <Route exact path='/SuperTem' component={TemContainer} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Root;","import React, { Component } from 'react';\nimport Root from './Root';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Root />\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}